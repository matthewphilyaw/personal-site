<blade-component>
  <div class={ state.bladeClasses }></div>

  <script type="ts">
    import { RiotComponentExport } from 'riot';

    interface Props {
      title: string;
      hdir: 'left' | 'right';
      vdir: 'top' | 'bottom';
    }

    interface State {
      bladeClasses: string;
    }

    function build(): RiotComponentExport<Props, State> {
      return {
        onMounted(currentProps: Props) {
          this.state = {
            bladeClasses: `blade blade__corner-${currentProps.vdir}-${currentProps.hdir}`
          };

          this.update();
        }
      };
    }

    export default build;
  </script>


  <style type="scss">
    :host {
      display: block;
    }

    .blade {
      --ui-cmd-bar-height: var(--ui-blade-height);
      --ui-title-height: var(--ui-blade-height);

      background-color: var(--ui-primary-color);
      color: var(--ui-on-primary-color);
      height: var(--ui-blade-height);

      display: flex;
      justify-content: space-between;
    }

    .blade__reverse {
      flex-direction: row-reverse;
    }

    .blade__input {
      background-color: var(--ui-background-color);
      color: var(--ui-on-background-color);
      font-size: var(--ui-blade-height);
      width: var(--ui-blade-input-width);
      padding: 0;
      border: none;
      border-bottom: 0.1rem solid var(--ui-secondary-color);
    }

    .blade__text {
      height: var(--ui-blade-height);
      background-color: var(--ui-background-color);
      color: var(--ui-on-background-color);
      font-size: var(--ui-blade-height);
      font-weight: 700;
      text-transform: uppercase;
      display: flex;
    }

    .blade__corner-top-right {
      border-radius: var(--ui-blade-height) 0 0 0 ;
    }

    .blade__corner-top-left {
      border-radius: 0 var(--ui-blade-height) 0 0 ;
    }

    .blade__corner-bottom-right {
      border-radius: 0 0 0 var(--ui-blade-height);
    }

    .blade__corner-bottom-left {
      border-radius: 0 0 var(--ui-blade-height) 0;
    }
  </style>

</blade-component>
